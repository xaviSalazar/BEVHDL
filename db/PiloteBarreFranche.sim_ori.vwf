/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 12000000.0;
	SIMULATION_TIME = 10000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk_50M")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("in_freq_anemometre")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("data_anemometre")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("data_anemometre[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

TRANSITION_LIST("clk_50M")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 600000;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("in_freq_anemometre")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2500000.0;
			LEVEL 1 FOR 2500000.0;
		}
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("data_anemometre[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000014.542;
		LEVEL 0 FOR 0.688;
		LEVEL 1 FOR 1.338;
		LEVEL 0 FOR 0.168;
		LEVEL 1 FOR 3999994.668;
		LEVEL 0 FOR 1.272;
		LEVEL 1 FOR 5999987.324;
	}
}

TRANSITION_LIST("data_anemometre[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000015.138;
		LEVEL 0 FOR 0.338;
		LEVEL 1 FOR 3.813;
		LEVEL 0 FOR 0.451;
		LEVEL 1 FOR 0.447;
		LEVEL 0 FOR 0.649;
		LEVEL 1 FOR 2.409;
		LEVEL 0 FOR 0.348;
		LEVEL 1 FOR 1.142;
		LEVEL 0 FOR 1.363;
		LEVEL 1 FOR 3.114;
		LEVEL 0 FOR 0.369;
		LEVEL 1 FOR 3999982.276;
		LEVEL 0 FOR 1.605;
		LEVEL 1 FOR 5999986.538;
	}
}

TRANSITION_LIST("data_anemometre[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000022.599;
		LEVEL 0 FOR 0.534;
		LEVEL 1 FOR 0.568;
		LEVEL 0 FOR 0.699;
		LEVEL 1 FOR 7.109;
		LEVEL 0 FOR 0.458;
		LEVEL 1 FOR 3999979.62;
		LEVEL 0 FOR 1.424;
		LEVEL 1 FOR 3.206;
		LEVEL 0 FOR 0.404;
		LEVEL 1 FOR 5999983.379;
	}
}

TRANSITION_LIST("data_anemometre[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000026.687;
		LEVEL 0 FOR 0.37;
		LEVEL 1 FOR 7.113;
		LEVEL 0 FOR 0.573;
		LEVEL 1 FOR 3999976.576;
		LEVEL 0 FOR 2.692;
		LEVEL 1 FOR 1.614;
		LEVEL 0 FOR 0.404;
		LEVEL 1 FOR 4.831;
		LEVEL 0 FOR 0.642;
		LEVEL 1 FOR 5999978.498;
	}
}

TRANSITION_LIST("data_anemometre[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000020.246;
		LEVEL 0 FOR 0.388;
		LEVEL 1 FOR 3.935;
		LEVEL 0 FOR 0.385;
		LEVEL 1 FOR 0.271;
		LEVEL 0 FOR 0.561;
		LEVEL 1 FOR 10.596;
		LEVEL 0 FOR 0.308;
		LEVEL 1 FOR 1.376;
		LEVEL 0 FOR 3999974.287;
		LEVEL 1 FOR 1.062;
		LEVEL 0 FOR 0.704;
		LEVEL 1 FOR 6.575;
		LEVEL 0 FOR 0.352;
		LEVEL 1 FOR 1.193;
		LEVEL 0 FOR 0.575;
		LEVEL 1 FOR 0.73;
		LEVEL 0 FOR 0.642;
		LEVEL 1 FOR 5999975.814;
	}
}

TRANSITION_LIST("data_anemometre[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 2000034.31;
			LEVEL 0 FOR 0.472;
			LEVEL 1 FOR 5.166;
			LEVEL 0 FOR 0.329;
			LEVEL 1 FOR 2.156;
			LEVEL 0 FOR 0.598;
			LEVEL 1 FOR 3999968.445;
			LEVEL 0 FOR 3.151;
			LEVEL 1 FOR 13.611;
			LEVEL 0 FOR 3999971.762;
		}
		LEVEL 1 FOR 2000000.0;
	}
}

TRANSITION_LIST("data_anemometre[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000045.849;
		LEVEL 0 FOR 3999967.121;
		LEVEL 1 FOR 1.245;
		LEVEL 0 FOR 0.609;
		LEVEL 1 FOR 5999985.176;
	}
}

TRANSITION_LIST("data_anemometre[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 2000048.025;
			LEVEL 0 FOR 3999964.585;
			LEVEL 1 FOR 0.408;
			LEVEL 0 FOR 0.349;
			LEVEL 1 FOR 19.359;
			LEVEL 0 FOR 0.33;
			LEVEL 1 FOR 0.146;
			LEVEL 0 FOR 3999966.798;
		}
		LEVEL 1 FOR 2000000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk_50M";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "in_freq_anemometre";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

TIME_BAR
{
	TIME = 35000;
	MASTER = TRUE;
}
;
