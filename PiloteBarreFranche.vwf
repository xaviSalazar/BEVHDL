/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000000.0;
	SIMULATION_TIME = 1000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk_50M")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("in_freq_anemometre")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("data_anemometre")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("data_anemometre[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

TRANSITION_LIST("clk_50M")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 50000;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("in_freq_anemometre")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 500.0;
			LEVEL 1 FOR 500.0;
		}
	}
}

TRANSITION_LIST("data_anemometre[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1514.407;
		LEVEL 0 FOR 3.594;
		LEVEL 1 FOR 38.678;
		LEVEL 0 FOR 0.817;
		LEVEL 1 FOR 3.873;
		LEVEL 0 FOR 998438.631;
	}
}

TRANSITION_LIST("data_anemometre[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 577.074;
		LEVEL 0 FOR 937.2;
		LEVEL 1 FOR 998485.726;
	}
}

TRANSITION_LIST("data_anemometre[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 583.062;
		LEVEL 0 FOR 932.353;
		LEVEL 1 FOR 52.822;
		LEVEL 0 FOR 998431.763;
	}
}

TRANSITION_LIST("data_anemometre[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 587.445;
		LEVEL 0 FOR 928.82;
		LEVEL 1 FOR 56.355;
		LEVEL 0 FOR 998427.38;
	}
}

TRANSITION_LIST("data_anemometre[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 592.483;
		LEVEL 0 FOR 923.309;
		LEVEL 1 FOR 61.866;
		LEVEL 0 FOR 998422.342;
	}
}

TRANSITION_LIST("data_anemometre[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 597.635;
		LEVEL 0 FOR 918.739;
		LEVEL 1 FOR 66.181;
		LEVEL 0 FOR 998417.445;
	}
}

TRANSITION_LIST("data_anemometre[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 603.104;
		LEVEL 0 FOR 914.149;
		LEVEL 1 FOR 70.771;
		LEVEL 0 FOR 998411.976;
	}
}

TRANSITION_LIST("data_anemometre[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 607.201;
		LEVEL 0 FOR 910.075;
		LEVEL 1 FOR 75.023;
		LEVEL 0 FOR 998407.701;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk_50M";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "in_freq_anemometre";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

TIME_BAR
{
	TIME = 35000;
	MASTER = TRUE;
}
;
